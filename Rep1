import os
import schedule
import time
import datetime
import socket
import psycopg2
import requests
import logging
from tabulate import tabulate

# Configure logging
logging.basicConfig(
    filename="replication_stats.log",
    level=logging.INFO,
    format="%(asctime)s - %(levelname)s - %(message)s",
    datefmt="%Y-%m-%d %H:%M:%S"
)

# Set your PostgreSQL connection parameters
db_params = {
    "host": "your_postgres_host",
    "database": "your_database",
    "user": "your_user",
    "password": "your_password",
}

# Set the Confluence API endpoint and credentials
confluence_url = "https://your-confluence-site/wiki/rest/api/content/YOUR_PAGE_ID"
confluence_username = "your_username"
confluence_password = "your_password"

# Directory to store data files
data_directory = "data"

# Function to fetch replication statistics and slots and format them as a table
def get_replication_stats():
    connection = None  # Initialize the connection variable
    try:
        connection = psycopg2.connect(**db_params)
        cursor = connection.cursor()

        # Get replication statistics with headers
        cursor.execute("SELECT * FROM pg_stat_replication;")
        replication_stats = cursor.fetchall()
        replication_stats.insert(0, [desc[0] for desc in cursor.description])

        # Get replication slots with headers
        cursor.execute("SELECT * FROM pg_replication_slots;")
        replication_slots = cursor.fetchall()
        replication_slots.insert(0, [desc[0] for desc in cursor.description])

        return replication_stats, replication_slots
    except Exception as e:
        logging.error("Error fetching replication stats: %s", str(e))
    finally:
        if connection:
            connection.close()

# Rest of the script remains the same
# ...
